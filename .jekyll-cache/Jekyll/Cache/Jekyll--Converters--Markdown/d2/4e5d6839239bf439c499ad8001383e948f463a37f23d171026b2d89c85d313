I"%*<h2 id="-이전-게시글">🚪 이전 게시글</h2>

<p>ADP 실기 시험 공부를 위해 연재하고 있으며,
첫 포스팅은 <a href="https://predictorssh.github.io/adp/2022/03/11/ADP-statistics-0.html">기초 통계량-1</a>이며,
해당 포스팅에대한 사전 정보들이 있다. (데이터 셋 등에 관한)<br /></p>

<p>이전 게시글 <a href="https://predictorssh.github.io/adp/2022/03/31/ADP-statistics-2.html">상관분석</a>에 이어서 작성한 글이다.</p>

<h2 id="-가설검정이란">🔑 가설검정이란</h2>

<p>네이버 지식백과에 따르면, (통계적)가설검정이란 확률적 표본 분포의 성질을 이용해서 가설이 참인지 거짓인지 가리는 것이다.<br />
이때 가설은 모집단의 특성에 관한 진술인 것이다. <br /></p>

<p>네이버 국어사전은 (통계적)가설검정을, 모집단의 특성이 어떠할 것이라는 주장(가설)을, 표본의 정보를 이용하여 참인지 거짓인지 판정하는 것이라 한다.</p>

<p>쉽게 정리하면 모집단의 특성에 대한 가설을, 참인지 거짓인지 판별하는 것을 가설검정이라고 한다.<br />
이때, 모집단 전체 데이터를 다 볼수 없으니(다 볼 수 있다면, 가설을 세우고 검증할 필요조차 없음) 표본 집단의 통계량을 활용한다.</p>

<h2 id="-귀무가설-대립가설">🔑 귀무가설 대립가설</h2>

<p>가설검정을 하려면 가설부터 세워야한다.<br />
일반적으로 연구에서 검증하는 가설을 귀무가설이라 하고, 그와 반대되는 가설을 대립가설이라고 한다.<br />
대립가설은 연구자가 입증되기를 바라는 가설이다.<br /><br />
<br />
예를 들어 범죄 사건에서 용의자가 있을 때 형사는 이 용의자가 범죄를 저질렀다는 추정인 대립가설을 세우게 된다.
이때 귀무가설은 용의자는 무죄라는 가설이다. 
출처 : 위키백과</p>

<h2 id="-검정통계량-p-value-유의-수준">🔑 검정통계량, p-value, 유의 수준</h2>

<p><strong>검정 통계량</strong>은 검정에 사용하는 표본의 통계량이다. 표본의 통계량이 설정한 임계치를 넘어가는지에 따라, 귀무가설의 기각 여부가 결정된다.<br />
<br />
<strong>p-value</strong>는 검정 통계량이 구해진 것보다 극단적인 값이 나올 확률이다.(<a href="https://predictorssh.github.io/adp/2022/03/31/ADP-statistics-2.html">이전 게시글</a> p-value 설명 참고)<br />
아래 확률 밀도 함수 그림에서(<a href="https://blog.acronym.co.kr/621">출처</a>)에서 <strong>검정통계량은</strong> z에 위치해 있고, p-value는 붉게 색칠된 영역의 넓이이다.<br /></p>

<p><img src="/assets/images/contents/ADP_statistics/test_statistic.PNG" alt="test_statistic" /></p>

<p><br />
검정통계량이 크면 p-value가 작아지는데, p-value가 작다는 말은 가정한(귀무가설) 모집단에서 구해진 표본 통계량이 나올 확률이 낮다는 이야기이다. <br />
즉, 가정한 모집단의 분포가 맞다면, 표본통계량이 그렇게 나올 확률이 매우 낮으므로, 가정을(귀무가설) 의심해봐야한다.<br />
<br /></p>

<p><strong>유의수준</strong>은 p-value가 얼마나 작으면, 가정(귀무가설)에 대한 의심을 넘어서 귀무가설을 기각하고 대립가설을 채택할 것인가를 결정하는 임계값이라 할 수 있다.<br />
아래 그림(<a href="https://laoonlee.tistory.com/11">출처</a>)에서 $ \alpha $ 로 표시된 노란색 영역이 유의수준이다.<br />
p-value가 유의수준 보다 작으면(검정통계량이 유의수준 영역 안으로 들어오면) 귀무가설을 기각하게 된다.<br /></p>

<p><img src="/assets/images/contents/ADP_statistics/p-level.PNG" alt="유의수준" />
<br />
더 자세한 내용은 실습을 해보면서 공부해 보자.</p>

<h2 id="두-집단의-평균의-차이를-검정">두 집단의 평균의 차이를 검정</h2>

<p>두 집단의 평균의 차이를 검정해보자<br />
두 집단 평균의 차이를 검정할 때는 T-test를  사용한다.</p>

<p>주어져 있는 데이터 셋을 활용하기 위해서,(데이터 분석에 별 도움은 안될 수 있지만,)<br />
2021년 season 2의 기온과, 2022년의 season 2의 기온에 대한 검정을 해보자.<br /></p>

<p>귀무가설과 대립가설은 아래와 같다.<br />
귀무가설 : 2011년 season2의 temp와, 2012년 season 2의 temp의 평균은 같다. <br />
대립가설 : 2011년 season2의 temp와, 2012년 season 2의 temp의 평균은 다르다.<br />
유의수준 : 0.05</p>

<p>먼저 두 집단의 평균을 구해보자.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># datetime의 타입을 변경 해줘야 함. train['datetime'] = pd.to_datetime(train['datetime'])
</span>
<span class="n">season_temp</span><span class="o">=</span><span class="n">train</span><span class="p">[[</span><span class="s">'datetime'</span><span class="p">,</span><span class="s">'season'</span><span class="p">,</span><span class="s">'temp'</span><span class="p">]].</span><span class="n">groupby</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="p">[</span><span class="n">train</span><span class="p">[</span><span class="s">'datetime'</span><span class="p">].</span><span class="n">dt</span><span class="p">.</span><span class="n">year</span><span class="p">,</span><span class="s">'season'</span><span class="p">]).</span><span class="n">mean</span><span class="p">()</span>
<span class="n">season_tem</span>

</code></pre></div></div>

<table>
  <thead>
    <tr>
      <th>datetime</th>
      <th>season</th>
      <th>temp</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2011</td>
      <td>1</td>
      <td>11.37339380196523</td>
    </tr>
    <tr>
      <td>2011</td>
      <td>2</td>
      <td>22.502311631309436</td>
    </tr>
    <tr>
      <td>2011</td>
      <td>3</td>
      <td>28.26567032967033</td>
    </tr>
    <tr>
      <td>2011</td>
      <td>4</td>
      <td>16.6093489392831</td>
    </tr>
    <tr>
      <td>2012</td>
      <td>1</td>
      <td>13.653631694790903</td>
    </tr>
    <tr>
      <td>2012</td>
      <td>2</td>
      <td>23.14489019033675</td>
    </tr>
    <tr>
      <td>2012</td>
      <td>3</td>
      <td>29.31140350877193</td>
    </tr>
    <tr>
      <td>2012</td>
      <td>4</td>
      <td>16.689129480614486</td>
    </tr>
  </tbody>
</table>

<p>위 표를 보면, <br />
2011은 22.502312, 2012년 23.144890 임을 알 수 있다. 실제로 두 차이가 유의미할까?</p>

<p>검정을 하기에 앞서,<br />
T-test에 확인해야할 것들이 3가지가 있다.<br />
독립 표본 T 검정은 3가지 가정을 만족해야한다.</p>

<ul>
  <li>
    <p>독립성 : 두 집단의 표본이 서로 독립이여야함</p>
  </li>
  <li>
    <p>정규성 : 일반적으로 표본의 개수가 30개 이상이면, 중심극한의 정리에의해 검정없이도 정규성 만족한다고 봄</p>
  </li>
  <li>
    <p>등분산성 : 종속 변수의 분포의 분산은 동일해야함 -&gt; 일반적으로 Levene의 등분산 검정을 실시하여, 귀무가설이(분산이 같다) 기각되지 않으면 등분산성 만족</p>
  </li>
</ul>

<p>2011년과 2012년, 두집단은 독립적이고, 표본의 개수가 아주 많으니,<br />
등분산성만 만족하는지 확인하면 된다.<br /></p>

<p>등분산성을 만족하는지 확인하기 위해서 가설검정을 해야한다.<br />
가설검정을 위한 가설검정이라 할 수 있다.<br />
자세한건 생략하고. Levene 검정을 진행해보자<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 등분산 검정
</span><span class="k">print</span><span class="p">(</span><span class="n">stats</span><span class="p">.</span><span class="n">levene</span><span class="p">(</span><span class="n">season2_2011</span><span class="p">,</span> <span class="n">season2_2012</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>LeveneResult(statistic=78.32719227332993, pvalue=1.536454859897447e-18)
</code></pre></div></div>
<p>등분산성 검정결과, 귀무가설이 기각 되었다. 즉 두 집단의 분산이 다르다.
등분산성을 만족하지 못한다.<br />
하지만 그렇다고해서 t-test를 사용하지 못하는 것은 아니다.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 등분산성 만족하지 않을 시 equal_var = False로 하여 ttest 진행
</span><span class="n">stats</span><span class="p">.</span><span class="n">ttest_ind</span><span class="p">(</span><span class="n">season2_2011</span><span class="p">,</span><span class="n">season2_2012</span><span class="p">,</span> <span class="n">equal_var</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>
<p>python은 위와 같이, equal_var이라는 매개변수를 통해서 등분산성 만족에 상관없이, t-test를 진행 할 수 있게 해준다.<br />
spciy의 stats.ttest_ind를 사용하여 t-test를 진행한 결과.<br /></p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Ttest_indResult(statistic=-3.2613766312800427, pvalue=0.0011231336530004804)
</code></pre></div></div>
<p>p-value가 0.001123으로 유의수준 0.05에서 귀무가설은 기각이다.<br />
만약 귀무가설이 옳았다면, statistic(통계량)이 저런 값이 나올 확률이 매우 낮다는 의미다.<br />
<br />
2011년과 2012년의 season 2 temp의 평균은 같지않다.</p>

<h2 id="-정리">📌 정리</h2>

<p>가설검정에 대해 알아보았고,<br />
대표적인 t-test를 진행해보았다.<br /></p>

<p>t-test는, 독립성, 정규성, 등분산성에 대한 검정을 먼저 진행하여야한다.<br />
그리고 그 결과에 따라, t-test 방법이 달라진다.</p>

<p>지금은 python과 라이브러리 도구의 힘을 빌려 쉽게 진행하였지만<br />
t-test의 방법이 어떻게 달라지는지 확인을 해봐야 할 것같다.<br /></p>

<h2 id="-다음-이야기">🎬 다음 이야기</h2>

<p>다음 게시글부터는 머신러닝으로 넘어가려고한다.<br />
통계, 가설검정은 조금은 지루하게 느껴진다!<br />
머신러닝부터 정리하다가, 틈틈히 가설검정에 대한 내용도 정리해야겠다.</p>

:ET